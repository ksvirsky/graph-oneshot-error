// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class SomeEvent extends ethereum.Event {
  get params(): SomeEvent__Params {
    return new SomeEvent__Params(this);
  }
}

export class SomeEvent__Params {
  _event: SomeEvent;

  constructor(event: SomeEvent) {
    this._event = event;
  }
}

export class MyContract extends ethereum.SmartContract {
  static bind(address: Address): MyContract {
    return new MyContract("MyContract", address);
  }

  getCurrentBlocknumber(): BigInt {
    let result = super.call(
      "getCurrentBlocknumber",
      "getCurrentBlocknumber():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentBlocknumber(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentBlocknumber",
      "getCurrentBlocknumber():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class EmitSomeEventCall extends ethereum.Call {
  get inputs(): EmitSomeEventCall__Inputs {
    return new EmitSomeEventCall__Inputs(this);
  }

  get outputs(): EmitSomeEventCall__Outputs {
    return new EmitSomeEventCall__Outputs(this);
  }
}

export class EmitSomeEventCall__Inputs {
  _call: EmitSomeEventCall;

  constructor(call: EmitSomeEventCall) {
    this._call = call;
  }
}

export class EmitSomeEventCall__Outputs {
  _call: EmitSomeEventCall;

  constructor(call: EmitSomeEventCall) {
    this._call = call;
  }
}
